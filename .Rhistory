pollutantmean(dirFiles, pollutant = "sulfate", id = 98:102)
pollutantmean(dirFiles, pollutant = "nitrate", id = 98:102)
pollutantmean(dirFiles, pollutant = "sulfate", id = 47)
pollutantmean(dirFiles, pollutant = "nitrate", id = 47)
pollutantmean(dirFiles, pollutant = "sulfate")
pollutantmean(dirFiles, pollutant = "nitrate")
pollutantMean[directory, "sulfate", 1:3)
pollutantMean(dirFiles, "sulfate", 1:3)
pollutantmean(dirFiles, "sulfate", 1:3)
pollutantmean(dirFiles, "nitrate", 1:3)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# Prepend id with zeros for getting fixed width 3
fileNo <- formatC(id, width = 3, format = "d", flag = "0")
# Build full filenames by combining directory, fileNo and extension
fileNames <- paste(paste(directory, fileNo, sep ="/"), "csv", sep = ".")
# Iterate all files, calc mean for each file and summarize means
sumMeans <- 0
for (aFileName in fileNames){
sumMeans <- sumMeans + mean((read.csv(aFileName, colClasses=c("NULL", NA, NA, "NULL"))[, pollutant]), na.rm = TRUE)
}
# Return the total mean of the pollutant across all given monitors
sumMeans/length(fileNames)
}
pollutantmean(dirFiles, pollutant = "sulfate")
dirFiles <- "Dropbox/Coursera/R Programming/Week2/PExercise/specdata"
pollutantmean(dirFiles, pollutant = "sulfate", id = 47)
pollutantmean(dirFiles, pollutant = "sulfate")
pollutantmean(dirFiles, pollutant = "sulfate", id = 98:102)
pollutantmean(dirFiles, pollutant = "nitrate", id = 98:102)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# Prepend id with zeros for getting fixed width 3
fileNo <- formatC(id, width = 3, format = "d", flag = "0")
# Build full filenames by combining directory, fileNo and extension
fileNames <- paste(paste(directory, fileNo, sep ="/"), "csv", sep = ".")
# Iterate all files, calc mean for each file and summarize means
sumMeans <- 0
for (aFileName in fileNames){
sumMeans <- sumMeans + mean((read.csv(aFileName)[, pollutant]), na.rm = TRUE)
}
# Return the total mean of the pollutant across all given monitors
sumMeans/length(fileNames)
}
mean(c("NA","NA"))
mean(c("NA","NA"), na.rm = TRUE)
mean(c(2,"NA"), na.rm = TRUE)
mean(c(2,NA), na.rm = TRUE)
mean(c(NA,NA), na.rm = TRUE)
mean(c(NA,3), na.rm = TRUE)
mean(c(NA,NA), na.rm = TRUE)
NaN
dirFiles <- "Dropbox/Coursera/R Programming/Week2/PExercise/specdata"
# Which files to read and prepend zeros
fileNo <- 98:102
fileNo <- formatC(fileNo, width = 3, format = "d", flag = "0")
# File extension
ext <- "csv"
# Combine directory, files and extension
fileNames <- paste(paste(dirFiles, fileNo, sep ="/"), ext, sep = ".")
pollutant <- "sulfate"
# Read CSV and summarize the means for each
sumMeans <- 0
for (aFileName in fileNames){
fileMean <- mean((read.csv(aFileName, colClasses=c("NULL", NA, NA, "NULL"))[, pollutant]), na.rm = TRUE)
sumMeans <- sumMeans + (if (fileMean == NaN) 0 else 0)
}
totalMean <- sumMeans/length(fileNames)
dirFiles <- "Dropbox/Coursera/R Programming/Week2/PExercise/specdata"
# Which files to read and prepend zeros
fileNo <- 98:102
fileNo <- formatC(fileNo, width = 3, format = "d", flag = "0")
# File extension
ext <- "csv"
# Combine directory, files and extension
fileNames <- paste(paste(dirFiles, fileNo, sep ="/"), ext, sep = ".")
pollutant <- "sulfate"
# Read CSV and summarize the means for each
sumMeans <- 0
for (aFileName in fileNames){
fileMean <- mean((read.csv(aFileName, colClasses=c("NULL", NA, NA, "NULL"))[, pollutant]), na.rm = TRUE)
sumMeans <- sumMeans + (if (is.nan(fileMean)) 0 else fileMean)
}
totalMean <- sumMeans/length(fileNames)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# Prepend id with zeros for getting fixed width 3
fileNo <- formatC(id, width = 3, format = "d", flag = "0")
# Build full filenames by combining directory, fileNo and extension
fileNames <- paste(paste(directory, fileNo, sep ="/"), "csv", sep = ".")
# Iterate all files, calc mean for each file and summarize means
sumMeans <- 0
for (aFileName in fileNames){
fileMean <- mean((read.csv(aFileName)[, pollutant]), na.rm = TRUE)
sumMeans <- sumMeans + (if (is.nan(fileMean)) 0 else fileMean)
}
# Return the total mean of the pollutant across all given monitors
sumMeans/length(fileNames)
}
pollutantmean(dirFiles, pollutant = "sulfate", id = 98:102)
pollutantmean(dirFiles, pollutant = "nitrate", id = 98:102)
pollutantmean(dirFiles, pollutant = "sulfate", id = 47)
pollutantmean(dirFiles, pollutant = "nitrate", id = 47)
pollutantmean(dirFiles, pollutant = "sulfate")
pollutantmean(dirFiles, pollutant = "nitrate")
pollutantmean(dirFiles, pollutant = "nitrate")
test  <- numeric(12)
pollutantmean(dirFiles, pollutant = "sulfate", id = 98:102)
pollutantmean(dirFiles, pollutant = "nitrate", id = 98:102)
pollutantmean(dirFiles, pollutant = "nitrate", id = 98:100)
pollutantmean(dirFiles, pollutant = "nitrate", id = 98)
mean(c(0,0,3))
mean(3)
pollutantmean(dirFiles, pollutant = "sulfate", id = 1:10)
pollutantmean(dirFiles, pollutant = "nitrate", id = 98)
mean((read.csv("Dropbox/Coursera/R Programming/Week2/PExercise/specdata/098.csv")[, pollutant]), na.rm = TRUE)
mean((read.csv("Dropbox/Coursera/R Programming/Week2/PExercise/specdata/098.csv")[, "nitrate"]), na.rm = TRUE)
pollutantmean(dirFiles, pollutant = "nitrate", id = 98:102)
pollutantmean(dirFiles, pollutant = "sulfate", id = 98:102)
pollutantmean(dirFiles, pollutant = "nitrate", id = 98:102)
pollutantmean(dirFiles, pollutant = "sulfate", id = 47)
pollutantmean(dirFiles, pollutant = "nitrate", id = 47)
pollutantmean(dirFiles, pollutant = "sulfate")
pollutantmean(dirFiles, pollutant = "nitrate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# Prepend id with zeros for getting fixed width 3
fileNo <- formatC(id, width = 3, format = "d", flag = "0")
# Build full filenames by combining directory, fileNo and extension
fileNames <- paste(paste(directory, fileNo, sep ="/"), "csv", sep = ".")
# Iterate all files, calc mean for each file and summarize means
sumMeans <- 0
for (aFileName in fileNames){
fileMean <- mean((read.csv(aFileName)[, pollutant]), na.rm = TRUE)
sumMeans <- sumMeans + (if (is.nan(fileMean)) 0 else fileMean)
}
# Return the mean of the pollutant across all given monitors
sumMeans/length(fileNames)
}
pollutantmean(dirFiles, pollutant = "sulfate", id = 98:102)
pollutantmean(dirFiles, pollutant = "nitrate", id = 98:102)
pollutantmean(dirFiles, pollutant = "sulfate", id = 47)
pollutantmean(dirFiles, pollutant = "nitrate", id = 47)
pollutantmean(dirFiles, pollutant = "sulfate")
pollutantmean(dirFiles, pollutant = "nitrate")
getwd()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
setwd("~/Documents/GitHub/Coursera/RProgramming/AirPollution")
ls()
list.files()
submit()
submit()
append(meansVector, 12.1)
meansVector <- numeric(0)
append(meansVector, 12.1)
meansVector
meansVector <- numeric(NULL)
meansVector <- numeric(0)
class(meansVector)
meansVector <- vector(mode="numeric", length=0)
class(meansVector)
append(meansVector, 12.1)
mean(meansVector)
meansVector <- vector(mode="numeric", length=0)
meansVector <- append(meansVector, 12.1)
mean(meansVector)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# Prepend id with zeros for getting fixed width 3
fileNo <- formatC(id, width = 3, format = "d", flag = "0")
# Build full filenames by combining directory, fileNo and extension
fileNames <- paste(paste(directory, fileNo, sep ="/"), "csv", sep = ".")
# Iterate all files, calc mean for each file and add to meansVector
meansVector <- vector(mode="numeric", length=0)
for (aFileName in fileNames){
fileMean <- mean((read.csv(aFileName)[, pollutant]), na.rm = TRUE)
# Add to meanVector iff contributing
if (is.nan(fileMean)) {next}
meansVector <- append(meansVector, fileMean)
}
# Return the mean of the pollutant across all given monitors
if (length(meansVector > 0) {
mean(meansVector)
}
else {
NA
}
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# Prepend id with zeros for getting fixed width 3
fileNo <- formatC(id, width = 3, format = "d", flag = "0")
# Build full filenames by combining directory, fileNo and extension
fileNames <- paste(paste(directory, fileNo, sep ="/"), "csv", sep = ".")
# Iterate all files, calc mean for each file and add to meansVector
meansVector <- vector(mode="numeric", length=0)
for (aFileName in fileNames){
fileMean <- mean((read.csv(aFileName)[, pollutant]), na.rm = TRUE)
# Add to meanVector iff contributing
if (is.nan(fileMean))
{
next
}
meansVector <- append(meansVector, fileMean)
}
# Return the mean of the pollutant across all given monitors
if (length(meansVector) > 0)
{
mean(meansVector)
}
else
{
NA
}
}
# Directory hosting files
dirFiles <- "Dropbox/Coursera/R Programming/Week2/PExercise/specdata"
# Testing different cases
pollutantmean(dirFiles, pollutant = "sulfate", id = 98:102)
dirFiles <- "~/Dropbox/Coursera/R Programming/Week2/PExercise/specdata"
# Testing different cases
pollutantmean(dirFiles, pollutant = "sulfate", id = 98:102)
pollutantmean(dirFiles, pollutant = "nitrate", id = 98:102)
pollutantmean(dirFiles, pollutant = "sulfate", id = 47)
pollutantmean(dirFiles, pollutant = "nitrate", id = 47)
pollutantmean(dirFiles, pollutant = "sulfate")
pollutantmean(dirFiles, pollutant = "nitrate")
pollutantmean(dirFiles, pollutant = "sulfate", id = 291:294)
pollutantmean(dirFiles, pollutant = "nitrate", id = 291:294)
getwd()
submit()
list.files()
source(submitscript1.R)
getwd()
source("submitscript1.R")
submit()
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
fileData <- read.csv("~/Dropbox/Coursera/R Programming/Week2/PExercise/specdata/001.csv")
fileData[!is.na(fileData[, "sulfate"]), "sulfate"]
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# Prepend id with zeros for getting fixed width 3
fileNo <- formatC(id, width = 3, format = "d", flag = "0")
# Build full filenames by combining directory, fileNo and extension
fileNames <- paste(paste(directory, fileNo, sep ="/"), "csv", sep = ".")
# Iterate all files, add non-na data to meansVector
meansVector <- vector(mode="numeric", length=0)
for (aFileName in fileNames){
# Read csv file
fileData <- read.csv(aFileName)
# Extract non-na data for given pollutant
fileData <- fileData[!is.na(fileData[, pollutant]), pollutant]
# Add to meanVector iff contributing
if (length(fileData) == 0)
{
next
}
meansVector <- append(meansVector, fileData)
}
# Return the mean of the pollutant across all given monitors
if (length(meansVector) > 0)
{
mean(meansVector)
}
else
{
NA
}
}
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", pollutant = "sulfate", id = 98:102)
pollutantmean("specdata", pollutant = "nitrate", id = 98:102)
source("pollutantmean.R")
pollutantmean("specdata", pollutant = "sulfate", id = 98:102)
pollutantmean("specdata", pollutant = "nitrate", id = 98:102)
pollutantmean("specdata", pollutant = "sulfate", id = 47)
pollutantmean("specdata", pollutant = "nitrate", id = 47)
pollutantmean("specdata", pollutant = "sulfate", id = 291:294)
pollutantmean(dirFiles, pollutant = "nitrate", id = 291:294)
pollutantmean("specdata", pollutant = "sulfate")
pollutantmean("specdata", pollutant = "nitrate")
pollutantmean("specdata", "sulfate", 1:10)
source("submitscript1.R")
submit()
fileData <- read.csv("specdata/001.csv")
fileData[complete.cases(fileData$sulfate, fileData$nitrate), ]
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
# Prepend id with zeros for getting fixed width 3
fileNo <- formatC(id, width = 3, format = "d", flag = "0")
# Build full filenames by combining directory, fileNo and extension
fileNames <- paste(paste(directory, fileNo, sep ="/"), "csv", sep = ".")
# Iterate all files, add non-na data to nobsVector
nobsVector <- vector(mode="integer", length=0)
for (aFileName in fileNames){
# Read csv file
fileData <- read.csv(aFileName)
# Extract non-na data for both pollutants
fileData <- fileData[complete.cases(fileData$sulfate, fileData$nitrate), ]
# Append to
nobsVector <- append(nobsVector, length(fileData))
}
# Create data.frame
data.frame(id = id, nobs = nobsVector)
}
complete("specdata",1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 1:10)
complete("specdata")
source("submitscript1.R")
submit()
completeCases <- complete(directory, id = 1:332)
completeCases <- complete("specdata", id = 1:332)
completeCases[completeCases$nobs >= 200, ]
completeCases[completeCases$nobs >= 400, ]
completeCases[completeCases$nobs >= 800, ]
completeCases[completeCases$nobs >= 900, ]
completeCases$id[completeCases$nobs >= 900, ]
completeCases[completeCases$nobs >= 900, "id"]
completeCases <- complete("specdata", id = 1:332)
completeIDs <- completeCases[completeCases$nobs > 900, "id"]
View(completeCases)
View(completeCases)
completeCases <- complete("specdata", id = 1:332)
completeIDs <- completeCases[completeCases$nobs > 1000, "id"]
fileNo <- formatC(completeIDs, width = 3, format = "d", flag = "0")
fileNames <- paste(paste("specdata", fileNo, sep ="/"), "csv", sep = ".")
for (aFileName in fileNames){
fileData <- read.csv(aFileName)
# Extract non-na data for both pollutants
fileData <- fileData[complete.cases(fileData$sulfate, fileData$nitrate), ]
}
View(fileData)
View(fileData)
completeCases <- complete("specdata", id = 1:332)
completeIDs <- completeCases[completeCases$nobs > 1000, "id"]
fileNo <- formatC(completeIDs, width = 3, format = "d", flag = "0")
fileNames <- paste(paste("specdata", fileNo, sep ="/"), "csv", sep = ".")
for (aFileName in fileNames){
fileData <- read.csv(aFileName)
# Extract non-na data for both pollutants
fileData <- fileData[complete.cases(fileData$sulfate, fileData$nitrate), c("sulfate", "nitrate")]
}
View(fileData)
View(fileData)
cor(fileData$sulfate, fileData$nitrate)
cr <- cor(fileData$sulfate, fileData$nitrate)
head(cr)
summary(cr)
class(cr)
cr <- cor(fileData)
View(cr)
View(cr)
completeCases <- complete("specdata", id = 1:332)
completeIDs <- completeCases[completeCases$nobs > 1000, "id"]
fileNo <- formatC(completeIDs, width = 3, format = "d", flag = "0")
fileNames <- paste(paste("specdata", fileNo, sep ="/"), "csv", sep = ".")
corVector <- vector(mode="numeric", length=0)
for (aFileName in fileNames){
fileData <- read.csv(aFileName)
# Extract non-na data for both pollutants
fileData <- fileData[complete.cases(fileData$sulfate, fileData$nitrate), c("sulfate", "nitrate")]
crVector <- append(crVector, cor(fileData$sulfate, fileData$nitrate))
}
completeCases <- complete("specdata", id = 1:332)
completeIDs <- completeCases[completeCases$nobs > 1000, "id"]
fileNo <- formatC(completeIDs, width = 3, format = "d", flag = "0")
fileNames <- paste(paste("specdata", fileNo, sep ="/"), "csv", sep = ".")
corVector <- vector(mode="numeric", length=0)
for (aFileName in fileNames){
fileData <- read.csv(aFileName)
# Extract non-na data for both pollutants
fileData <- fileData[complete.cases(fileData$sulfate, fileData$nitrate), c("sulfate", "nitrate")]
corVector <- append(corVector, cor(fileData$sulfate, fileData$nitrate))
}
head(corVector)
summary(corVector)
# Load functions
source("complete.R")
source("corr.R")
# Load functions
source("complete.R")
# Load functions
source("complete.R")
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
# Load functions
source("complete.R")
source("corr.R")
# Load functions
source("complete.R")
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
# Load functions
source("complete.R")
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
source("complete.R")
source("corr.R")
cr <- corr("specdata", 150)
cr
source("complete.R")
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr
source("submitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
